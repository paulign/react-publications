{"version":3,"sources":["reducers/publications.js","actions/types.js","icons.js","components/ImageUpload.jsx","firebaseConfig.js","actions/publications.js","views/CreatePublication.jsx","views/PublicationsList/PublicationCard.jsx","views/PublicationsList/PublicationsTableHeader.jsx","views/PublicationsList/PublicationsTable.jsx","routes.js","views/PublicationsList/index.jsx","views/PublicationDetails.jsx","layout/Header/MenuItem.jsx","layout/Header/index.jsx","layout/Main.jsx","layout/Footer.jsx","App.jsx","serviceWorker.js","index.js","reducers/index.js"],"names":["INITIAL_STATE","isCreating","uploadProgress","image","text","reducers_publications","state","arguments","length","undefined","action","type","_action$payload","payload","field","value","Object","objectSpread","defineProperty","library","add","faCameraRetro","faCloudUploadAlt","faCheckCircle","faTimesCircle","ImageUpload","_this$props","this","props","onDropImage","onRemoveImage","react_default","a","createElement","dist_es","onDrop","accept","_ref","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","assign","className","concat","reactstrap_es","onClick","close","src","preview","alt","react_fontawesome_index_es","key","size","icon","Component","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","startCreate","stopCreate","uploadImage","_ref3","id","onSuccess","onError","dispatch","storageRef","storage","ref","metadata","contentType","uploadTask","child","name","put","on","snapshot","progress","bytesTransferred","totalBytes","error","asyncToGenerator","regenerator_default","mark","_callee3","url","wrap","_context3","prev","next","getDownloadURL","sent","t0","stop","handleCreatePublicationError","console","log","errorNotification","title","message","CreatePublication","onChangeText","e","_this","onChangePublicationForm","target","files","file","URL","createObjectURL","stopPropagation","onCreate","createPublication","md","lg","onChange","placeholder","rows","ImageUpload_ImageUpload","color","disabled","parseInt","animated","connect","publications","_callee2","getState","_getState$publication","db","created_at","_context2","database","push","ServerValue","TIMESTAMP","_ref2","_callee","_args","_context","set","successNotification","apply","_x","_x2","PublicationCard","react_router_dom_es","to","moment","format","PublicationsTableHeader","PublicationsTable","_ref$publications","_ref$isLoading","isLoading","PublicationsList_PublicationsTableHeader","map","item","PublicationsList_PublicationCard","routes","path","showInNav","exact","component","PublicationsList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","unsubscribeFromRef","callback","off","loadView","onLoadList","listRef","setState","listObj","val","values","PublicationsList_PublicationsTable","getCurrentId","match","params","currentId","onLoadPublication","publicationRef","publication","_this$state","redirect","redirectTo","MenuItem","activeClassName","Header","toggleCollapse","isOpen","_this2","light","expand","fixed","href","navbar","route","index","Header_MenuItem","Main","history","document","documentElement","scrollTop","container","Switch","Redirect","Route","withRouter","Footer","App","notifications","notifications_default","layout_Header","layout_Main","layout_Footer","Boolean","window","location","hostname","createHistory","middlewares","thunk","store","createStore","combineReducers","router","connectRouter","compose","applyMiddleware","routerMiddleware","ReactDOM","render","es","lib","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7056505.chunk.js","sourcesContent":["import {\r\n    CREATE_PUBLICATION_START,\r\n    CREATE_PUBLICATION_STOP,\r\n    UPLOAD_IMAGE_PROGRESS,\r\n    CHANGE_PUBLICATION_FORM\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    isCreating: false,\r\n    uploadProgress: 0,\r\n    image: null,\r\n    text: ''\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_PUBLICATION_FORM:\r\n            const { field, value } = action.payload;\r\n            return {\r\n                ...state,\r\n                [field]: value\r\n            }\r\n        case CREATE_PUBLICATION_START:\r\n            return {\r\n                ...state,\r\n                isCreating: true,\r\n                uploadProgress: 0\r\n            }\r\n        case CREATE_PUBLICATION_STOP:\r\n            return {\r\n                ...state,\r\n                ...INITIAL_STATE\r\n            }\r\n        case UPLOAD_IMAGE_PROGRESS:\r\n            return {\r\n                ...state,\r\n                uploadProgress: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","export const CREATE_PUBLICATION_START = 'CREATE_PUBLICATION_START';\r\nexport const CREATE_PUBLICATION_STOP = 'CREATE_PUBLICATION_STOP';\r\nexport const UPLOAD_IMAGE_PROGRESS = 'UPLOAD_IMAGE_PROGRESS';\r\nexport const CHANGE_PUBLICATION_FORM = 'CHANGE_PUBLICATION_FORM';","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCameraRetro, faCloudUploadAlt, faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faCameraRetro, faCloudUploadAlt, faCheckCircle, faTimesCircle);\r\n\r\nexport default library;","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport Dropzone from 'react-dropzone'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class ImageUpload extends Component {\r\n    render() {\r\n        const { image, onDropImage, onRemoveImage } = this.props;\r\n        return (\r\n            <Dropzone onDrop={onDropImage} accept=\"image/*\">\r\n                {({ getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject }) => (\r\n                    <div {...getRootProps()}\r\n                        className={`dropzone d-flex flex-column align-items-center justify-content-center${\r\n                            isDragAccept ? ' accepted' : ''\r\n                            }${\r\n                            isDragReject ? ' rejected' : ''\r\n                            }${\r\n                            isDragActive ? ' active' : ''\r\n                            }`\r\n                        }\r\n                    >\r\n                        <input {...getInputProps()} />\r\n                        {!image ? ([\r\n                            <FontAwesomeIcon key=\"icon\" className=\"text-info\" size=\"2x\" icon=\"cloud-upload-alt\" />,\r\n                            <span key=\"text\">{!isDragActive ? 'Drag' : 'Drop'} image here...</span>\r\n                        ]) : (\r\n                                <div className=\"preview-wrapper\">\r\n                                    <Button onClick={onRemoveImage} close />\r\n                                    <img src={image.preview} alt=\"\" />\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n        )\r\n    }\r\n}","import * as firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import firebase from '../firebaseConfig';\r\nimport { success as successNotification, error as errorNotification } from 'react-notification-system-redux';\r\nimport { CREATE_PUBLICATION_STOP, CREATE_PUBLICATION_START, UPLOAD_IMAGE_PROGRESS, CHANGE_PUBLICATION_FORM } from \"./types\";\r\nimport { push } from 'connected-react-router';\r\n\r\nexport const onChangePublicationForm = (data = {}) => ({\r\n    type: CHANGE_PUBLICATION_FORM, payload: data\r\n});\r\n\r\nexport const createPublication = () => async (dispatch, getState) => {\r\n    try {\r\n        const { text, image } = getState().publications;\r\n        \r\n        if (text) {\r\n            dispatch(startCreate());\r\n\r\n            const db = firebase.database();\r\n            const ref = db.ref('publications').push();\r\n            const id = ref.key;\r\n            const created_at = firebase.database.ServerValue.TIMESTAMP;\r\n\r\n            const onSuccess = async (url = null) => {\r\n                try {\r\n                    await ref.set({ text, id, image: url, created_at });\r\n                    dispatch(stopCreate());\r\n                    dispatch(successNotification({ title: 'Success', message: 'Publication was successfully created!' }));\r\n                    dispatch(push(`/publications/${id}`));\r\n                } catch (error) {\r\n                    handleCreatePublicationError(error, dispatch);\r\n                }\r\n            }\r\n\r\n            if (image) {\r\n                uploadImage({ id, image: image.file, onSuccess, onError: handleCreatePublicationError, dispatch });\r\n            } else {\r\n                onSuccess();\r\n            }\r\n        }\r\n    } catch (error) {\r\n        handleCreatePublicationError(error, dispatch);\r\n    }\r\n}\r\n\r\nconst startCreate = () => ({ type: CREATE_PUBLICATION_START });\r\nconst stopCreate = () => ({ type: CREATE_PUBLICATION_STOP });\r\nconst uploadProgress = (progress) => ({ type: UPLOAD_IMAGE_PROGRESS, payload: progress });\r\n\r\nconst uploadImage = ({ image, id, onSuccess, onError, dispatch }) => {\r\n    try {\r\n        const storageRef = firebase.storage().ref('images');\r\n        const metadata = {\r\n            contentType: image.type\r\n        }\r\n\r\n        const uploadTask = storageRef.child(`${id}_${image.name}`).put(image, metadata);\r\n\r\n        uploadTask.on('state_changed',\r\n            function (snapshot) {\r\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                dispatch(uploadProgress(progress));\r\n            }, function (error) {\r\n                onError(error, dispatch)\r\n            }, async function () {\r\n                try {\r\n                    const url = await uploadTask.snapshot.ref.getDownloadURL();\r\n                    onSuccess(url);\r\n                } catch (error) {\r\n                    onError(error, dispatch);\r\n                }\r\n            });\r\n    } catch (error) {\r\n        onError(error, dispatch);\r\n    }\r\n}\r\n\r\nconst handleCreatePublicationError = (error, dispatch) => {\r\n    console.log(error);\r\n    if (dispatch) {\r\n        dispatch(stopCreate());\r\n        dispatch(errorNotification({ title: 'error', message: error.message }));\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, FormGroup, Label, Input, Row, Col, Button, Progress } from 'reactstrap';\r\nimport ImageUpload from '../components/ImageUpload';\r\nimport { createPublication, onChangePublicationForm } from '../actions';\r\n\r\nclass CreatePublication extends Component {\r\n    onChangeText = (e) => {\r\n        this.props.onChangePublicationForm({ field: 'text', value: e.target.value });\r\n    }\r\n\r\n    onDropImage = (files) => {\r\n        const image = { file: files[0], preview: URL.createObjectURL(files[0]) };\r\n        this.props.onChangePublicationForm({ field: 'image', value: image });\r\n    }\r\n\r\n    onRemoveImage = (e) => {\r\n        e.stopPropagation();\r\n        this.props.onChangePublicationForm({ field: 'image', value: null });\r\n    }\r\n\r\n    onCreate = () => {\r\n        this.props.createPublication();\r\n    }\r\n\r\n    render() {\r\n        const { isCreating, uploadProgress, image, text } = this.props;\r\n        return (\r\n            <Container>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={10} lg={8}>\r\n                        <FormGroup>\r\n                            <Label>Publication text</Label>\r\n                            <Input value={text} onChange={this.onChangeText} placeholder=\"Type publication text\" type=\"textarea\" rows={5} />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label>Publication image</Label>\r\n                            <ImageUpload\r\n                                image={image}\r\n                                onDropImage={this.onDropImage}\r\n                                onRemoveImage={this.onRemoveImage}\r\n                            />\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" disabled={!text || !!isCreating} onClick={this.onCreate} size=\"lg\">Publish</Button>\r\n                        {!!isCreating && !!image && (\r\n                            <div>\r\n                                <div className=\"text-center\">Uploading image: {parseInt(uploadProgress)}%</div>\r\n                                <Progress animated color={uploadProgress < 100 ? 'primary' : 'success'} value={uploadProgress} />\r\n                            </div>\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    ...state.publications\r\n});\r\n\r\nexport default connect(mapStateToProps, { createPublication, onChangePublicationForm })(CreatePublication);","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PublicationCard = ({ text, created_at, image, id }) => {\r\n    return (\r\n        <Link to={`/publications/${id}`} className=\"publication-card\">\r\n            <Row>\r\n                <Col className=\"mb-2 mb-md-0 publication-text\" md={7}>\r\n                    <strong className=\"mr-2 d-md-none\">Text:</strong> {text}\r\n                </Col>\r\n                <Col className=\"mb-2 mb-md-0\" md={3}>\r\n                    <strong className=\"mr-2 d-md-none\">Created at:</strong> {moment(created_at).format('DD/MM/YYYY HH:mm')}\r\n                </Col>\r\n                <Col className=\"mb-2 mb-md-0\" md={2}>\r\n                    <strong className=\"mr-2 d-md-none\">Image:</strong>\r\n                    {!image ?\r\n                        <FontAwesomeIcon className=\"text-danger\" icon=\"times-circle\" /> :\r\n                        <FontAwesomeIcon className=\"text-success\" icon=\"check-circle\" />}\r\n                </Col>\r\n            </Row>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default PublicationCard;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst PublicationsTableHeader = () => (\r\n    <div className=\"publications-header\">\r\n        <Row className=\"d-none d-md-flex\">\r\n            <Col md={7}>\r\n                Text\r\n            </Col>\r\n            <Col md={3}>\r\n                Created at\r\n            </Col>\r\n            <Col md={2}>\r\n                Image\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n);\r\n\r\nexport default PublicationsTableHeader;","import React from 'react';\r\nimport PublicationCard from './PublicationCard';\r\nimport PublicationsTableHeader from './PublicationsTableHeader';\r\n\r\nconst PublicationsTable = ({ publications = [], isLoading = false }) => {\r\n    if (!publications || !publications.length) {\r\n        return (\r\n            <h4 className=\"text-center\">{isLoading ? 'Loading...' : 'No publications yet...'}</h4>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PublicationsTableHeader />\r\n            {publications.map(item => (\r\n                <PublicationCard key={item.id} {...item} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PublicationsTable;","import CreatePublication from \"./views/CreatePublication\";\r\nimport PublicationsList from \"./views/PublicationsList\";\r\nimport PublicationDetails from \"./views/PublicationDetails\";\r\n\r\nconst routes = [\r\n    { path: \"/publications\", showInNav: true, exact: true, title: 'Publications', component: PublicationsList },\r\n    { path: \"/publications/:id\", title: 'Publication Details', component: PublicationDetails },\r\n    { path: \"/create-publication\", showInNav: true, title: 'Create New', component: CreatePublication },\r\n    { redirect: true, redirectTo: \"/create-publication\" }\r\n];\r\n\r\nexport default routes;","import React, { Component } from 'react';\r\nimport firebase from '../../firebaseConfig';\r\nimport { Container } from 'reactstrap';\r\nimport PublicationsTable from './PublicationsTable';\r\n\r\nclass PublicationsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            publications: [],\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadView();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeFromRef('listRef', this.onLoadList);\r\n    }\r\n\r\n    unsubscribeFromRef = (key, callback) => {\r\n        if (this[key]) {\r\n            this[key].off('value', callback);\r\n        }\r\n        this[key] = null;\r\n    }\r\n\r\n    loadView = () => {\r\n        try {\r\n            this.unsubscribeFromRef('listRef', this.onLoadList);\r\n            const db = firebase.database();\r\n            this.listRef = db.ref('publications');\r\n            this.listRef.on('value', this.onLoadList);\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    onLoadList = async (snapshot) => {\r\n        try {\r\n            const listObj = snapshot.val() || {};\r\n            const publications = Object.values(listObj);\r\n            await this.setState({ publications, isLoading: false });\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"publications-list\">\r\n                <h2>Publications list</h2>\r\n                <PublicationsTable {...this.state} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PublicationsList;","import React, { Component } from 'react';\r\nimport firebase from '../firebaseConfig';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nclass PublicationsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            publication: null,\r\n            isLoading: true,\r\n            currentId: this.getCurrentId()\r\n        };\r\n    }\r\n\r\n    getCurrentId = () => {\r\n        let id = null;\r\n        const { match } = this.props;\r\n\r\n        if (match.params) {\r\n            id = match.params.id || null;\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadView();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribeFromRef('publicationRef', this.onLoadPublication);\r\n    }\r\n\r\n    unsubscribeFromRef = (key, callback) => {\r\n        if (this[key]) {\r\n            this[key].off('value', callback);\r\n        }\r\n        this[key] = null;\r\n    }\r\n\r\n    loadView = () => {\r\n        try {\r\n            const { currentId } = this.state;\r\n\r\n            if (currentId) {\r\n                this.unsubscribeFromRef('publicationRef', this.onLoadPublication);\r\n                const db = firebase.database();\r\n                this.publicationRef = db.ref(`publications/${currentId}`);\r\n                this.publicationRef.on('value', this.onLoadPublication);\r\n            } else {\r\n                this.setState({ isLoading: false });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    onLoadPublication = async (snapshot) => {\r\n        try {\r\n            const publication = snapshot.val();\r\n            await this.setState({ publication, isLoading: false });\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { publication, isLoading } = this.state;\r\n        return (\r\n            <Container className=\"publication-details\">\r\n                <h2>Publication details</h2>\r\n                {!publication ? (\r\n                    <h4 className=\"text-center\">{isLoading ? 'Loading...' : 'Publication not found'}</h4>\r\n                ) : (\r\n                        <Row>\r\n                            <Col md={!!publication.image ? 8 : 12}>\r\n                                <p>{publication.text}</p>\r\n                            </Col>\r\n                            {!!publication.image && (\r\n                                <Col md={4}>\r\n                                    <img className=\"img-fluid w-100\" src={publication.image} alt=\"\" />\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                    )}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PublicationsList;","import React from 'react';\r\nimport { NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuItem = ({ path, title, showInNav, redirect, onClick }) => {\r\n    if (!showInNav || redirect) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <NavItem>\r\n            <NavLink\r\n                onClick={onClick}\r\n                className=\"nav-link\"\r\n                to={path}\r\n                activeClassName=\"active\"\r\n            >\r\n                {title}\r\n            </NavLink>\r\n        </NavItem>\r\n    );\r\n}\r\n\r\nexport default MenuItem;","import React, { Component } from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Collapse,\r\n    NavbarToggler,\r\n    Nav\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport routes from '../../routes';\r\nimport MenuItem from './MenuItem';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n\r\n        return (\r\n            <header>\r\n                <Navbar light expand=\"sm\" fixed=\"top\">\r\n                    <NavbarBrand href=\"/\">\r\n                        <FontAwesomeIcon className=\"mr-3\" size=\"lg\" icon=\"camera-retro\" />\r\n                        React Publications\r\n                    </NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggleCollapse} />\r\n                    {!!routes && !!routes.length && (\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"mr-auto\" navbar>\r\n                                {routes.map((route, index) => {\r\n                                    return <MenuItem key={index} onClick={isOpen ? this.toggleCollapse : null} {...route} />\r\n                                })}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    )}\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router';\r\nimport routes from '../routes';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n    componentDidUpdate(e) {\r\n        if (e.history.action === \"PUSH\") {\r\n            document.documentElement.scrollTop = 0;\r\n            this.container.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"content-wrapper\" ref={container => this.container = container}>\r\n                <Switch>\r\n                    {routes.map((route, key) => {\r\n                        if (!route.redirect) {\r\n                            return <Route path={route.path} exact={!!route.exact} component={route.component} key={key} />\r\n                        }\r\n\r\n                        return (\r\n                            <Redirect to={route.redirectTo} key={key} />\r\n                        )\r\n                    })}\r\n\r\n                </Switch>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Main);","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"page-footer\">\r\n                &copy; 2018 Smartly coded by\r\n                <a\r\n                    className=\"ml-1 text-dark\"\r\n                    href=\"https://www.linkedin.com/in/paul-ignatiev/\"\r\n                >\r\n                    <strong>Paul Ihnatiev</strong>\r\n                </a>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Notifications from 'react-notification-system-redux';\nimport {withRouter} from 'react-router-dom';\nimport './icons';\nimport Header from './layout/Header';\nimport Main from './layout/Main';\nimport Footer from './layout/Footer';\n\nclass App extends Component {\n  render() {\n    const {notifications} = this.props;\n    return (\n      <div>\n        <Notifications notifications={notifications} />\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: state.notifications\n  }\n}\nexport default withRouter(connect(mapStateToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\nimport createHistory from 'history/createHashHistory';\nimport thunk from \"redux-thunk\";\n\nimport reducer from './reducers';\nimport './assets/styles/styles.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createHistory();\nconst middlewares = [thunk]\nconst store = createStore(reducer(history), compose(applyMiddleware(routerMiddleware(history), ...middlewares)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport {reducer as notifications} from 'react-notification-system-redux';\r\nimport publications from './publications';\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    notifications,\r\n    publications\r\n})"],"sourceRoot":""}